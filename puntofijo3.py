# -*- coding: utf-8 -*-
"""Untitled26.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1l6GmRFwcLVjOr2ZcKOz9-kQ5O-x4ky7g
"""

import numpy as np
import matplotlib.pyplot as plt

# Definir la función g(x) para el método de punto fijo
def g(x):
    return np.cos(x)  # Transformamos cos(x) - x = 0 a x = g(x)

# Derivada de g(x) para el criterio de convergencia
def g_prime(x):
    return -np.sin(x)

# Error absoluto
def error_absoluto(x_new, x_old):
    return abs(x_new - x_old)

# Método de punto fijo
def punto_fijo(x0, tol=1e-5, max_iter=100):
    iteraciones = []
    errores_abs = []
    criterios_convergencia = []

    x_old = x0
    for i in range(max_iter):
        x_new = g(x_old)
        e_abs = error_absoluto(x_new, x_old)
        criterio = abs(g_prime(x_old))

        iteraciones.append((i+1, x_new, e_abs, criterio))
        errores_abs.append(e_abs)
        criterios_convergencia.append(criterio)

        if e_abs < tol:
            break

        x_old = x_new

    return iteraciones, errores_abs, criterios_convergencia

# Parámetros iniciales
x0 = 0.5
iteraciones, errores_abs, criterios_convergencia = punto_fijo(x0)

# Imprimir tabla de iteraciones
print("Iteración | x_n      | Error absoluto | |g'(x)|")
print("-------------------------------------------------")
for it in iteraciones:
    print(f"{it[0]:9d} | {it[1]:.6f} | {it[2]:.6e} | {it[3]:.6e}")

# Graficar la convergencia
x_vals = np.linspace(-1, 1, 100)
y_vals = g(x_vals)

plt.figure(figsize=(8, 5))
plt.plot(x_vals, y_vals, label=r"$g(x) = \cos(x)$", color="blue")
plt.plot(x_vals, x_vals, linestyle="dashed", color="red", label="y = x")

# Graficar iteraciones
x_points = [it[1] for it in iteraciones]
y_points = [g(x) for x in x_points]
plt.scatter(x_points, y_points, color="black", zorder=3)
plt.plot(x_points, y_points, linestyle="dotted", color="black", label="Iteraciones")

plt.xlabel("x")
plt.ylabel("g(x)")
plt.legend()
plt.grid(True)
plt.title("Método de Punto Fijo")
plt.savefig("punto_fijo_convergencia.png")
plt.show()

# Graficar errores y criterio de convergencia
plt.figure(figsize=(8, 5))
plt.plot(range(1, len(errores_abs) + 1), errores_abs, marker="o", label="Error absoluto")
plt.plot(range(1, len(criterios_convergencia) + 1), criterios_convergencia, marker="s", label="|g'(x)|")

plt.xlabel("Iteración")
plt.ylabel("Valor")
plt.yscale("log")
plt.legend()
plt.grid(True)
plt.title("Evolución del Error y Criterio de Convergencia")
plt.savefig("errores_punto_fijo.png")
plt.show()